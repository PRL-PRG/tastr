Grammar

    0 $accept: start "end of file"

    1 scalartype: INTEGER
    2           | DOUBLE
    3           | COMPLEX
    4           | CHARACTER
    5           | LOGICAL
    6           | RAW

    7 environmenttype: ENVIRONMENT

    8 expressiontype: EXPRESSION

    9 languagetype: LANGUAGE

   10 symboltype: SYMBOL

   11 externalptrtype: EXTERNALPOINTER

   12 bytecodetype: BYTECODE

   13 pairlisttype: PAIRLIST

   14 s4type: S4

   15 weakreftype: WEAKREF

   16 anytype: ANY

   17 vectortype: scalartype "[" "]"

   18 nonavectortype: "!" vectortype

   19 listtype: "((" typeseq "))"

   20 typeseq: %empty
   21        | type
   22        | typeseq "," type

   23 structtype: "{{" namedtypeseq "}}"

   24 identifier: INTEGER
   25           | DOUBLE
   26           | COMPLEX
   27           | CHARACTER
   28           | LOGICAL
   29           | RAW
   30           | ENVIRONMENT
   31           | EXPRESSION
   32           | LANGUAGE
   33           | SYMBOL
   34           | EXTERNALPOINTER
   35           | BYTECODE
   36           | PAIRLIST
   37           | S4
   38           | WEAKREF
   39           | ANY
   40           | TYPEDECL
   41           | "..."
   42           | IDENTIFIER

   43 namedtype: identifier ":" type

   44 namedtypeseq: %empty
   45             | namedtype
   46             | namedtypeseq "," namedtype

   47 paramtype: type
   48          | "..."

   49 paramtypeseq: %empty
   50             | paramtype
   51             | paramtypeseq "," paramtype

   52 functiontype: "<" paramtypeseq ">" "=>" type

   53 grouptype: "(" type ")"

   54 nonuniontype: scalartype
   55             | environmenttype
   56             | expressiontype
   57             | languagetype
   58             | symboltype
   59             | externalptrtype
   60             | bytecodetype
   61             | pairlisttype
   62             | s4type
   63             | weakreftype
   64             | vectortype
   65             | nonavectortype
   66             | functiontype
   67             | structtype
   68             | listtype
   69             | grouptype

   70 innertype: nonuniontype
   71          | innertype "|" nonuniontype

   72 nulltype: "?"
   73         | "?" innertype

   74 type: innertype
   75     | nulltype
   76     | anytype

   77 decltype: TYPEDECL identifier type ";"

   78 decllist: decltype
   79         | decllist decltype

   80 start: "end of file"
   81      | decllist "end of file"


Terminals, with rules where they appear

    "end of file" (0) 0 80 81
    error (256)
    "|" <std::string> (258) 71
    "!" <std::string> (259) 18
    "=>" <std::string> (260) 52
    "," <std::string> (261) 22 46 51
    "((" <std::string> (262) 19
    "(" <std::string> (263) 53
    "))" <std::string> (264) 19
    ")" <std::string> (265) 53
    "[" <std::string> (266) 17
    "]" <std::string> (267) 17
    "<" <std::string> (268) 52
    ">" <std::string> (269) 52
    "{{" <std::string> (270) 23
    "}}" <std::string> (271) 23
    ";" <std::string> (272) 77
    ":" <std::string> (273) 43
    "..." <std::string> (274) 41 48
    "?" <std::string> (275) 72 73
    INTEGER <std::string> (276) 1 24
    DOUBLE <std::string> (277) 2 25
    COMPLEX <std::string> (278) 3 26
    CHARACTER <std::string> (279) 4 27
    LOGICAL <std::string> (280) 5 28
    RAW <std::string> (281) 6 29
    ENVIRONMENT <std::string> (282) 7 30
    EXPRESSION <std::string> (283) 8 31
    LANGUAGE <std::string> (284) 9 32
    SYMBOL <std::string> (285) 10 33
    EXTERNALPOINTER <std::string> (286) 11 34
    BYTECODE <std::string> (287) 12 35
    PAIRLIST <std::string> (288) 13 36
    S4 <std::string> (289) 14 37
    WEAKREF <std::string> (290) 15 38
    ANY <std::string> (291) 16 39
    TYPEDECL <std::string> (292) 40 77
    IDENTIFIER <std::string> (293) 42
    LOWER_THAN_OR (294)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    scalartype <ScalarTypeNodePtr> (41)
        on left: 1 2 3 4 5 6
        on right: 17 54
    environmenttype <EnvironmentTypeNodePtr> (42)
        on left: 7
        on right: 55
    expressiontype <ExpressionTypeNodePtr> (43)
        on left: 8
        on right: 56
    languagetype <LanguageTypeNodePtr> (44)
        on left: 9
        on right: 57
    symboltype <SymbolTypeNodePtr> (45)
        on left: 10
        on right: 58
    externalptrtype <ExternalPointerTypeNodePtr> (46)
        on left: 11
        on right: 59
    bytecodetype <BytecodeTypeNodePtr> (47)
        on left: 12
        on right: 60
    pairlisttype <PairlistTypeNodePtr> (48)
        on left: 13
        on right: 61
    s4type <S4TypeNodePtr> (49)
        on left: 14
        on right: 62
    weakreftype <WeakReferenceTypeNodePtr> (50)
        on left: 15
        on right: 63
    anytype <AnyTypeNodePtr> (51)
        on left: 16
        on right: 76
    vectortype <VectorTypeNodePtr> (52)
        on left: 17
        on right: 18 64
    nonavectortype <NoNaTypeNodePtr> (53)
        on left: 18
        on right: 65
    typeseq <TypeNodeSequenceNodePtr> (54)
        on left: 20 21 22
        on right: 19 22
    namedtype <TagTypePairNodePtr> (55)
        on left: 43
        on right: 45 46
    namedtypeseq <TagTypePairNodeSequenceNodePtr> (56)
        on left: 44 45 46
        on right: 23 46
    paramtype <TypeNodePtr> (57)
        on left: 47 48
        on right: 50 51
    paramtypeseq <TypeNodeSequenceNodePtr> (58)
        on left: 49 50 51
        on right: 51 52
    functiontype <FunctionTypeNodePtr> (59)
        on left: 52
        on right: 66
    grouptype <GroupTypeNodePtr> (60)
        on left: 53
        on right: 69
    nonuniontype <TypeNodePtr> (61)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 70 71
    listtype <ListTypeNodePtr> (62)
        on left: 19
        on right: 68
    structtype <StructTypeNodePtr> (63)
        on left: 23
        on right: 67
    identifier <IdentifierNodePtr> (64)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 43 77
    innertype <TypeNodePtr> (65)
        on left: 70 71
        on right: 71 73 74
    nulltype <TypeNodePtr> (66)
        on left: 72 73
        on right: 75
    type <TypeNodePtr> (67)
        on left: 74 75 76
        on right: 21 22 43 47 52 53 77
    decltype <TypeDeclarationNodePtr> (68)
        on left: 77
        on right: 78 79
    decllist (69)
        on left: 78 79
        on right: 79 81
    start (70)
        on left: 80 81
        on right: 0


State 0

    0 $accept: . start "end of file"

    "end of file"  shift, and go to state 1
    TYPEDECL       shift, and go to state 2

    decltype  go to state 3
    decllist  go to state 4
    start     go to state 5


State 1

   80 start: "end of file" .

    $default  reduce using rule 80 (start)


State 2

   77 decltype: TYPEDECL . identifier type ";"

    "..."            shift, and go to state 6
    INTEGER          shift, and go to state 7
    DOUBLE           shift, and go to state 8
    COMPLEX          shift, and go to state 9
    CHARACTER        shift, and go to state 10
    LOGICAL          shift, and go to state 11
    RAW              shift, and go to state 12
    ENVIRONMENT      shift, and go to state 13
    EXPRESSION       shift, and go to state 14
    LANGUAGE         shift, and go to state 15
    SYMBOL           shift, and go to state 16
    EXTERNALPOINTER  shift, and go to state 17
    BYTECODE         shift, and go to state 18
    PAIRLIST         shift, and go to state 19
    S4               shift, and go to state 20
    WEAKREF          shift, and go to state 21
    ANY              shift, and go to state 22
    TYPEDECL         shift, and go to state 23
    IDENTIFIER       shift, and go to state 24

    identifier  go to state 25


State 3

   78 decllist: decltype .

    $default  reduce using rule 78 (decllist)


State 4

   79 decllist: decllist . decltype
   81 start: decllist . "end of file"

    "end of file"  shift, and go to state 26
    TYPEDECL       shift, and go to state 2

    decltype  go to state 27


State 5

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 28


State 6

   41 identifier: "..." .

    $default  reduce using rule 41 (identifier)


State 7

   24 identifier: INTEGER .

    $default  reduce using rule 24 (identifier)


State 8

   25 identifier: DOUBLE .

    $default  reduce using rule 25 (identifier)


State 9

   26 identifier: COMPLEX .

    $default  reduce using rule 26 (identifier)


State 10

   27 identifier: CHARACTER .

    $default  reduce using rule 27 (identifier)


State 11

   28 identifier: LOGICAL .

    $default  reduce using rule 28 (identifier)


State 12

   29 identifier: RAW .

    $default  reduce using rule 29 (identifier)


State 13

   30 identifier: ENVIRONMENT .

    $default  reduce using rule 30 (identifier)


State 14

   31 identifier: EXPRESSION .

    $default  reduce using rule 31 (identifier)


State 15

   32 identifier: LANGUAGE .

    $default  reduce using rule 32 (identifier)


State 16

   33 identifier: SYMBOL .

    $default  reduce using rule 33 (identifier)


State 17

   34 identifier: EXTERNALPOINTER .

    $default  reduce using rule 34 (identifier)


State 18

   35 identifier: BYTECODE .

    $default  reduce using rule 35 (identifier)


State 19

   36 identifier: PAIRLIST .

    $default  reduce using rule 36 (identifier)


State 20

   37 identifier: S4 .

    $default  reduce using rule 37 (identifier)


State 21

   38 identifier: WEAKREF .

    $default  reduce using rule 38 (identifier)


State 22

   39 identifier: ANY .

    $default  reduce using rule 39 (identifier)


State 23

   40 identifier: TYPEDECL .

    $default  reduce using rule 40 (identifier)


State 24

   42 identifier: IDENTIFIER .

    $default  reduce using rule 42 (identifier)


State 25

   77 decltype: TYPEDECL identifier . type ";"

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 71


State 26

   81 start: decllist "end of file" .

    $default  reduce using rule 81 (start)


State 27

   79 decllist: decllist decltype .

    $default  reduce using rule 79 (decllist)


State 28

    0 $accept: start "end of file" .

    $default  accept


State 29

   18 nonavectortype: "!" . vectortype

    INTEGER    shift, and go to state 35
    DOUBLE     shift, and go to state 36
    COMPLEX    shift, and go to state 37
    CHARACTER  shift, and go to state 38
    LOGICAL    shift, and go to state 39
    RAW        shift, and go to state 40

    scalartype  go to state 72
    vectortype  go to state 73


State 30

   19 listtype: "((" . typeseq "))"

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    $default  reduce using rule 20 (typeseq)

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    typeseq          go to state 74
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 75


State 31

   53 grouptype: "(" . type ")"

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 76


State 32

   52 functiontype: "<" . paramtypeseq ">" "=>" type

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "..."            shift, and go to state 77
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    $default  reduce using rule 49 (paramtypeseq)

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    paramtype        go to state 78
    paramtypeseq     go to state 79
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 80


State 33

   23 structtype: "{{" . namedtypeseq "}}"

    "..."            shift, and go to state 6
    INTEGER          shift, and go to state 7
    DOUBLE           shift, and go to state 8
    COMPLEX          shift, and go to state 9
    CHARACTER        shift, and go to state 10
    LOGICAL          shift, and go to state 11
    RAW              shift, and go to state 12
    ENVIRONMENT      shift, and go to state 13
    EXPRESSION       shift, and go to state 14
    LANGUAGE         shift, and go to state 15
    SYMBOL           shift, and go to state 16
    EXTERNALPOINTER  shift, and go to state 17
    BYTECODE         shift, and go to state 18
    PAIRLIST         shift, and go to state 19
    S4               shift, and go to state 20
    WEAKREF          shift, and go to state 21
    ANY              shift, and go to state 22
    TYPEDECL         shift, and go to state 23
    IDENTIFIER       shift, and go to state 24

    $default  reduce using rule 44 (namedtypeseq)

    namedtype     go to state 81
    namedtypeseq  go to state 82
    identifier    go to state 83


State 34

   72 nulltype: "?" .
   73         | "?" . innertype

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49

    $default  reduce using rule 72 (nulltype)

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 84


State 35

    1 scalartype: INTEGER .

    $default  reduce using rule 1 (scalartype)


State 36

    2 scalartype: DOUBLE .

    $default  reduce using rule 2 (scalartype)


State 37

    3 scalartype: COMPLEX .

    $default  reduce using rule 3 (scalartype)


State 38

    4 scalartype: CHARACTER .

    $default  reduce using rule 4 (scalartype)


State 39

    5 scalartype: LOGICAL .

    $default  reduce using rule 5 (scalartype)


State 40

    6 scalartype: RAW .

    $default  reduce using rule 6 (scalartype)


State 41

    7 environmenttype: ENVIRONMENT .

    $default  reduce using rule 7 (environmenttype)


State 42

    8 expressiontype: EXPRESSION .

    $default  reduce using rule 8 (expressiontype)


State 43

    9 languagetype: LANGUAGE .

    $default  reduce using rule 9 (languagetype)


State 44

   10 symboltype: SYMBOL .

    $default  reduce using rule 10 (symboltype)


State 45

   11 externalptrtype: EXTERNALPOINTER .

    $default  reduce using rule 11 (externalptrtype)


State 46

   12 bytecodetype: BYTECODE .

    $default  reduce using rule 12 (bytecodetype)


State 47

   13 pairlisttype: PAIRLIST .

    $default  reduce using rule 13 (pairlisttype)


State 48

   14 s4type: S4 .

    $default  reduce using rule 14 (s4type)


State 49

   15 weakreftype: WEAKREF .

    $default  reduce using rule 15 (weakreftype)


State 50

   16 anytype: ANY .

    $default  reduce using rule 16 (anytype)


State 51

   17 vectortype: scalartype . "[" "]"
   54 nonuniontype: scalartype .

    "["  shift, and go to state 85

    $default  reduce using rule 54 (nonuniontype)


State 52

   55 nonuniontype: environmenttype .

    $default  reduce using rule 55 (nonuniontype)


State 53

   56 nonuniontype: expressiontype .

    $default  reduce using rule 56 (nonuniontype)


State 54

   57 nonuniontype: languagetype .

    $default  reduce using rule 57 (nonuniontype)


State 55

   58 nonuniontype: symboltype .

    $default  reduce using rule 58 (nonuniontype)


State 56

   59 nonuniontype: externalptrtype .

    $default  reduce using rule 59 (nonuniontype)


State 57

   60 nonuniontype: bytecodetype .

    $default  reduce using rule 60 (nonuniontype)


State 58

   61 nonuniontype: pairlisttype .

    $default  reduce using rule 61 (nonuniontype)


State 59

   62 nonuniontype: s4type .

    $default  reduce using rule 62 (nonuniontype)


State 60

   63 nonuniontype: weakreftype .

    $default  reduce using rule 63 (nonuniontype)


State 61

   76 type: anytype .

    $default  reduce using rule 76 (type)


State 62

   64 nonuniontype: vectortype .

    $default  reduce using rule 64 (nonuniontype)


State 63

   65 nonuniontype: nonavectortype .

    $default  reduce using rule 65 (nonuniontype)


State 64

   66 nonuniontype: functiontype .

    $default  reduce using rule 66 (nonuniontype)


State 65

   69 nonuniontype: grouptype .

    $default  reduce using rule 69 (nonuniontype)


State 66

   70 innertype: nonuniontype .

    $default  reduce using rule 70 (innertype)


State 67

   68 nonuniontype: listtype .

    $default  reduce using rule 68 (nonuniontype)


State 68

   67 nonuniontype: structtype .

    $default  reduce using rule 67 (nonuniontype)


State 69

   71 innertype: innertype . "|" nonuniontype
   74 type: innertype .

    "|"  shift, and go to state 86

    $default  reduce using rule 74 (type)


State 70

   75 type: nulltype .

    $default  reduce using rule 75 (type)


State 71

   77 decltype: TYPEDECL identifier type . ";"

    ";"  shift, and go to state 87


State 72

   17 vectortype: scalartype . "[" "]"

    "["  shift, and go to state 85


State 73

   18 nonavectortype: "!" vectortype .

    $default  reduce using rule 18 (nonavectortype)


State 74

   19 listtype: "((" typeseq . "))"
   22 typeseq: typeseq . "," type

    ","   shift, and go to state 88
    "))"  shift, and go to state 89


State 75

   21 typeseq: type .

    $default  reduce using rule 21 (typeseq)


State 76

   53 grouptype: "(" type . ")"

    ")"  shift, and go to state 90


State 77

   48 paramtype: "..." .

    $default  reduce using rule 48 (paramtype)


State 78

   50 paramtypeseq: paramtype .

    $default  reduce using rule 50 (paramtypeseq)


State 79

   51 paramtypeseq: paramtypeseq . "," paramtype
   52 functiontype: "<" paramtypeseq . ">" "=>" type

    ","  shift, and go to state 91
    ">"  shift, and go to state 92


State 80

   47 paramtype: type .

    $default  reduce using rule 47 (paramtype)


State 81

   45 namedtypeseq: namedtype .

    $default  reduce using rule 45 (namedtypeseq)


State 82

   23 structtype: "{{" namedtypeseq . "}}"
   46 namedtypeseq: namedtypeseq . "," namedtype

    ","   shift, and go to state 93
    "}}"  shift, and go to state 94


State 83

   43 namedtype: identifier . ":" type

    ":"  shift, and go to state 95


State 84

   71 innertype: innertype . "|" nonuniontype
   73 nulltype: "?" innertype .

    "|"  shift, and go to state 86

    $default  reduce using rule 73 (nulltype)


State 85

   17 vectortype: scalartype "[" . "]"

    "]"  shift, and go to state 96


State 86

   71 innertype: innertype "|" . nonuniontype

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 97
    listtype         go to state 67
    structtype       go to state 68


State 87

   77 decltype: TYPEDECL identifier type ";" .

    $default  reduce using rule 77 (decltype)


State 88

   22 typeseq: typeseq "," . type

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 98


State 89

   19 listtype: "((" typeseq "))" .

    $default  reduce using rule 19 (listtype)


State 90

   53 grouptype: "(" type ")" .

    $default  reduce using rule 53 (grouptype)


State 91

   51 paramtypeseq: paramtypeseq "," . paramtype

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "..."            shift, and go to state 77
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    paramtype        go to state 99
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 80


State 92

   52 functiontype: "<" paramtypeseq ">" . "=>" type

    "=>"  shift, and go to state 100


State 93

   46 namedtypeseq: namedtypeseq "," . namedtype

    "..."            shift, and go to state 6
    INTEGER          shift, and go to state 7
    DOUBLE           shift, and go to state 8
    COMPLEX          shift, and go to state 9
    CHARACTER        shift, and go to state 10
    LOGICAL          shift, and go to state 11
    RAW              shift, and go to state 12
    ENVIRONMENT      shift, and go to state 13
    EXPRESSION       shift, and go to state 14
    LANGUAGE         shift, and go to state 15
    SYMBOL           shift, and go to state 16
    EXTERNALPOINTER  shift, and go to state 17
    BYTECODE         shift, and go to state 18
    PAIRLIST         shift, and go to state 19
    S4               shift, and go to state 20
    WEAKREF          shift, and go to state 21
    ANY              shift, and go to state 22
    TYPEDECL         shift, and go to state 23
    IDENTIFIER       shift, and go to state 24

    namedtype   go to state 101
    identifier  go to state 83


State 94

   23 structtype: "{{" namedtypeseq "}}" .

    $default  reduce using rule 23 (structtype)


State 95

   43 namedtype: identifier ":" . type

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 102


State 96

   17 vectortype: scalartype "[" "]" .

    $default  reduce using rule 17 (vectortype)


State 97

   71 innertype: innertype "|" nonuniontype .

    $default  reduce using rule 71 (innertype)


State 98

   22 typeseq: typeseq "," type .

    $default  reduce using rule 22 (typeseq)


State 99

   51 paramtypeseq: paramtypeseq "," paramtype .

    $default  reduce using rule 51 (paramtypeseq)


State 100

   52 functiontype: "<" paramtypeseq ">" "=>" . type

    "!"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "{{"             shift, and go to state 33
    "?"              shift, and go to state 34
    INTEGER          shift, and go to state 35
    DOUBLE           shift, and go to state 36
    COMPLEX          shift, and go to state 37
    CHARACTER        shift, and go to state 38
    LOGICAL          shift, and go to state 39
    RAW              shift, and go to state 40
    ENVIRONMENT      shift, and go to state 41
    EXPRESSION       shift, and go to state 42
    LANGUAGE         shift, and go to state 43
    SYMBOL           shift, and go to state 44
    EXTERNALPOINTER  shift, and go to state 45
    BYTECODE         shift, and go to state 46
    PAIRLIST         shift, and go to state 47
    S4               shift, and go to state 48
    WEAKREF          shift, and go to state 49
    ANY              shift, and go to state 50

    scalartype       go to state 51
    environmenttype  go to state 52
    expressiontype   go to state 53
    languagetype     go to state 54
    symboltype       go to state 55
    externalptrtype  go to state 56
    bytecodetype     go to state 57
    pairlisttype     go to state 58
    s4type           go to state 59
    weakreftype      go to state 60
    anytype          go to state 61
    vectortype       go to state 62
    nonavectortype   go to state 63
    functiontype     go to state 64
    grouptype        go to state 65
    nonuniontype     go to state 66
    listtype         go to state 67
    structtype       go to state 68
    innertype        go to state 69
    nulltype         go to state 70
    type             go to state 103


State 101

   46 namedtypeseq: namedtypeseq "," namedtype .

    $default  reduce using rule 46 (namedtypeseq)


State 102

   43 namedtype: identifier ":" type .

    $default  reduce using rule 43 (namedtype)


State 103

   52 functiontype: "<" paramtypeseq ">" "=>" type .

    $default  reduce using rule 52 (functiontype)
