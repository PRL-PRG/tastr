Grammar

    0 $accept: start "end of file"

    1 ascalartype: INTEGER
    2            | DOUBLE
    3            | COMPLEX
    4            | CHARACTER
    5            | LOGICAL

    6 rawascalartype: RAW

    7 nascalartype: "^" ascalartype

    8 scalartype: ascalartype
    9           | rawascalartype
   10           | nascalartype

   11 environmenttype: ENVIRONMENT

   12 expressiontype: EXPRESSION

   13 languagetype: LANGUAGE

   14 symboltype: SYMBOL

   15 externalptrtype: EXTERNALPOINTER

   16 bytecodetype: BYTECODE

   17 pairlisttype: PAIRLIST

   18 s4type: S4

   19 weakreftype: WEAKREF

   20 anytype: ANY

   21 unknowntype: "???"

   22 vectortype: scalartype "[" "]"

   23 listtype: "((" typeseq "))"

   24 typeseq: %empty
   25        | type
   26        | typeseq "," type

   27 structtype: "{{" namedtypeseq "}}"

   28 tupletype: "[[" typeseq "]]"

   29 identifier: INTEGER
   30           | DOUBLE
   31           | COMPLEX
   32           | CHARACTER
   33           | LOGICAL
   34           | RAW
   35           | ENVIRONMENT
   36           | EXPRESSION
   37           | LANGUAGE
   38           | SYMBOL
   39           | EXTERNALPOINTER
   40           | BYTECODE
   41           | PAIRLIST
   42           | S4
   43           | WEAKREF
   44           | ANY
   45           | TYPEDECL
   46           | "..."
   47           | IDENTIFIER

   48 namedtype: identifier ":" type

   49 namedtypeseq: %empty
   50             | namedtype
   51             | namedtypeseq "," namedtype

   52 paramtype: type
   53          | "..."

   54 paramtypeseq: %empty
   55             | paramtype
   56             | paramtypeseq "," paramtype

   57 functiontype: "<" paramtypeseq ">" "=>" type

   58 grouptype: "(" type ")"

   59 nonuniontype: scalartype
   60             | environmenttype
   61             | expressiontype
   62             | languagetype
   63             | symboltype
   64             | externalptrtype
   65             | bytecodetype
   66             | pairlisttype
   67             | s4type
   68             | weakreftype
   69             | vectortype
   70             | functiontype
   71             | structtype
   72             | listtype
   73             | tupletype
   74             | grouptype

   75 innertype: nonuniontype
   76          | innertype "|" nonuniontype

   77 nulltype: "?"
   78         | "?" innertype

   79 type: innertype
   80     | nulltype
   81     | anytype
   82     | unknowntype

   83 decltype: TYPEDECL identifier type ";"

   84 decllist: decltype
   85         | decllist decltype

   86 start: "end of file"
   87      | decllist "end of file"


Terminals, with rules where they appear

    "end of file" (0) 0 86 87
    error (256)
    "|" <std::string> (258) 76
    "^" <std::string> (259) 7
    "=>" <std::string> (260) 57
    "," <std::string> (261) 26 51 56
    "((" <std::string> (262) 23
    "(" <std::string> (263) 58
    "))" <std::string> (264) 23
    ")" <std::string> (265) 58
    "[" <std::string> (266) 22
    "]" <std::string> (267) 22
    "<" <std::string> (268) 57
    ">" <std::string> (269) 57
    "[[" <std::string> (270) 28
    "]]" <std::string> (271) 28
    "{{" <std::string> (272) 27
    "}}" <std::string> (273) 27
    ";" <std::string> (274) 83
    ":" <std::string> (275) 48
    "..." <std::string> (276) 46 53
    "???" <std::string> (277) 21
    "?" <std::string> (278) 77 78
    INTEGER <std::string> (279) 1 29
    DOUBLE <std::string> (280) 2 30
    COMPLEX <std::string> (281) 3 31
    CHARACTER <std::string> (282) 4 32
    LOGICAL <std::string> (283) 5 33
    RAW <std::string> (284) 6 34
    ENVIRONMENT <std::string> (285) 11 35
    EXPRESSION <std::string> (286) 12 36
    LANGUAGE <std::string> (287) 13 37
    SYMBOL <std::string> (288) 14 38
    EXTERNALPOINTER <std::string> (289) 15 39
    BYTECODE <std::string> (290) 16 40
    PAIRLIST <std::string> (291) 17 41
    S4 <std::string> (292) 18 42
    WEAKREF <std::string> (293) 19 43
    ANY <std::string> (294) 20 44
    TYPEDECL <std::string> (295) 45 83
    IDENTIFIER <std::string> (296) 47
    LOWER_THAN_OR (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    ascalartype <AScalarTypeNodePtr> (44)
        on left: 1 2 3 4 5
        on right: 7 8
    rawascalartype <RawAScalarTypeNodePtr> (45)
        on left: 6
        on right: 9
    nascalartype <NAScalarTypeNodePtr> (46)
        on left: 7
        on right: 10
    scalartype <ScalarTypeNodePtr> (47)
        on left: 8 9 10
        on right: 22 59
    environmenttype <EnvironmentTypeNodePtr> (48)
        on left: 11
        on right: 60
    expressiontype <ExpressionTypeNodePtr> (49)
        on left: 12
        on right: 61
    languagetype <LanguageTypeNodePtr> (50)
        on left: 13
        on right: 62
    symboltype <SymbolTypeNodePtr> (51)
        on left: 14
        on right: 63
    externalptrtype <ExternalPointerTypeNodePtr> (52)
        on left: 15
        on right: 64
    bytecodetype <BytecodeTypeNodePtr> (53)
        on left: 16
        on right: 65
    pairlisttype <PairlistTypeNodePtr> (54)
        on left: 17
        on right: 66
    s4type <S4TypeNodePtr> (55)
        on left: 18
        on right: 67
    weakreftype <WeakReferenceTypeNodePtr> (56)
        on left: 19
        on right: 68
    unknowntype <UnknownTypeNodePtr> (57)
        on left: 21
        on right: 82
    anytype <AnyTypeNodePtr> (58)
        on left: 20
        on right: 81
    vectortype <VectorTypeNodePtr> (59)
        on left: 22
        on right: 69
    typeseq <TypeNodeSequenceNodePtr> (60)
        on left: 24 25 26
        on right: 23 26 28
    namedtype <TagTypePairNodePtr> (61)
        on left: 48
        on right: 50 51
    namedtypeseq <TagTypePairNodeSequenceNodePtr> (62)
        on left: 49 50 51
        on right: 27 51
    paramtype <TypeNodePtr> (63)
        on left: 52 53
        on right: 55 56
    paramtypeseq <TypeNodeSequenceNodePtr> (64)
        on left: 54 55 56
        on right: 56 57
    functiontype <FunctionTypeNodePtr> (65)
        on left: 57
        on right: 70
    grouptype <GroupTypeNodePtr> (66)
        on left: 58
        on right: 74
    nonuniontype <TypeNodePtr> (67)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 75 76
    listtype <ListTypeNodePtr> (68)
        on left: 23
        on right: 72
    structtype <StructTypeNodePtr> (69)
        on left: 27
        on right: 71
    tupletype <TupleTypeNodePtr> (70)
        on left: 28
        on right: 73
    identifier <IdentifierNodePtr> (71)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
        on right: 48 83
    innertype <TypeNodePtr> (72)
        on left: 75 76
        on right: 76 78 79
    nulltype <TypeNodePtr> (73)
        on left: 77 78
        on right: 80
    type <TypeNodePtr> (74)
        on left: 79 80 81 82
        on right: 25 26 48 52 57 58 83
    decltype <TypeDeclarationNodePtr> (75)
        on left: 83
        on right: 84 85
    decllist (76)
        on left: 84 85
        on right: 85 87
    start (77)
        on left: 86 87
        on right: 0


State 0

    0 $accept: . start "end of file"

    "end of file"  shift, and go to state 1
    TYPEDECL       shift, and go to state 2

    decltype  go to state 3
    decllist  go to state 4
    start     go to state 5


State 1

   86 start: "end of file" .

    $default  reduce using rule 86 (start)


State 2

   83 decltype: TYPEDECL . identifier type ";"

    "..."            shift, and go to state 6
    INTEGER          shift, and go to state 7
    DOUBLE           shift, and go to state 8
    COMPLEX          shift, and go to state 9
    CHARACTER        shift, and go to state 10
    LOGICAL          shift, and go to state 11
    RAW              shift, and go to state 12
    ENVIRONMENT      shift, and go to state 13
    EXPRESSION       shift, and go to state 14
    LANGUAGE         shift, and go to state 15
    SYMBOL           shift, and go to state 16
    EXTERNALPOINTER  shift, and go to state 17
    BYTECODE         shift, and go to state 18
    PAIRLIST         shift, and go to state 19
    S4               shift, and go to state 20
    WEAKREF          shift, and go to state 21
    ANY              shift, and go to state 22
    TYPEDECL         shift, and go to state 23
    IDENTIFIER       shift, and go to state 24

    identifier  go to state 25


State 3

   84 decllist: decltype .

    $default  reduce using rule 84 (decllist)


State 4

   85 decllist: decllist . decltype
   87 start: decllist . "end of file"

    "end of file"  shift, and go to state 26
    TYPEDECL       shift, and go to state 2

    decltype  go to state 27


State 5

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 28


State 6

   46 identifier: "..." .

    $default  reduce using rule 46 (identifier)


State 7

   29 identifier: INTEGER .

    $default  reduce using rule 29 (identifier)


State 8

   30 identifier: DOUBLE .

    $default  reduce using rule 30 (identifier)


State 9

   31 identifier: COMPLEX .

    $default  reduce using rule 31 (identifier)


State 10

   32 identifier: CHARACTER .

    $default  reduce using rule 32 (identifier)


State 11

   33 identifier: LOGICAL .

    $default  reduce using rule 33 (identifier)


State 12

   34 identifier: RAW .

    $default  reduce using rule 34 (identifier)


State 13

   35 identifier: ENVIRONMENT .

    $default  reduce using rule 35 (identifier)


State 14

   36 identifier: EXPRESSION .

    $default  reduce using rule 36 (identifier)


State 15

   37 identifier: LANGUAGE .

    $default  reduce using rule 37 (identifier)


State 16

   38 identifier: SYMBOL .

    $default  reduce using rule 38 (identifier)


State 17

   39 identifier: EXTERNALPOINTER .

    $default  reduce using rule 39 (identifier)


State 18

   40 identifier: BYTECODE .

    $default  reduce using rule 40 (identifier)


State 19

   41 identifier: PAIRLIST .

    $default  reduce using rule 41 (identifier)


State 20

   42 identifier: S4 .

    $default  reduce using rule 42 (identifier)


State 21

   43 identifier: WEAKREF .

    $default  reduce using rule 43 (identifier)


State 22

   44 identifier: ANY .

    $default  reduce using rule 44 (identifier)


State 23

   45 identifier: TYPEDECL .

    $default  reduce using rule 45 (identifier)


State 24

   47 identifier: IDENTIFIER .

    $default  reduce using rule 47 (identifier)


State 25

   83 decltype: TYPEDECL identifier . type ";"

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 77


State 26

   87 start: decllist "end of file" .

    $default  reduce using rule 87 (start)


State 27

   85 decllist: decllist decltype .

    $default  reduce using rule 85 (decllist)


State 28

    0 $accept: start "end of file" .

    $default  accept


State 29

    7 nascalartype: "^" . ascalartype

    INTEGER    shift, and go to state 37
    DOUBLE     shift, and go to state 38
    COMPLEX    shift, and go to state 39
    CHARACTER  shift, and go to state 40
    LOGICAL    shift, and go to state 41

    ascalartype  go to state 78


State 30

   23 listtype: "((" . typeseq "))"

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    $default  reduce using rule 24 (typeseq)

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    typeseq          go to state 79
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 80


State 31

   58 grouptype: "(" . type ")"

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 81


State 32

   57 functiontype: "<" . paramtypeseq ">" "=>" type

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "..."            shift, and go to state 82
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    $default  reduce using rule 54 (paramtypeseq)

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    paramtype        go to state 83
    paramtypeseq     go to state 84
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 85


State 33

   28 tupletype: "[[" . typeseq "]]"

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    $default  reduce using rule 24 (typeseq)

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    typeseq          go to state 86
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 80


State 34

   27 structtype: "{{" . namedtypeseq "}}"

    "..."            shift, and go to state 6
    INTEGER          shift, and go to state 7
    DOUBLE           shift, and go to state 8
    COMPLEX          shift, and go to state 9
    CHARACTER        shift, and go to state 10
    LOGICAL          shift, and go to state 11
    RAW              shift, and go to state 12
    ENVIRONMENT      shift, and go to state 13
    EXPRESSION       shift, and go to state 14
    LANGUAGE         shift, and go to state 15
    SYMBOL           shift, and go to state 16
    EXTERNALPOINTER  shift, and go to state 17
    BYTECODE         shift, and go to state 18
    PAIRLIST         shift, and go to state 19
    S4               shift, and go to state 20
    WEAKREF          shift, and go to state 21
    ANY              shift, and go to state 22
    TYPEDECL         shift, and go to state 23
    IDENTIFIER       shift, and go to state 24

    $default  reduce using rule 49 (namedtypeseq)

    namedtype     go to state 87
    namedtypeseq  go to state 88
    identifier    go to state 89


State 35

   21 unknowntype: "???" .

    $default  reduce using rule 21 (unknowntype)


State 36

   77 nulltype: "?" .
   78         | "?" . innertype

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51

    $default  reduce using rule 77 (nulltype)

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 90


State 37

    1 ascalartype: INTEGER .

    $default  reduce using rule 1 (ascalartype)


State 38

    2 ascalartype: DOUBLE .

    $default  reduce using rule 2 (ascalartype)


State 39

    3 ascalartype: COMPLEX .

    $default  reduce using rule 3 (ascalartype)


State 40

    4 ascalartype: CHARACTER .

    $default  reduce using rule 4 (ascalartype)


State 41

    5 ascalartype: LOGICAL .

    $default  reduce using rule 5 (ascalartype)


State 42

    6 rawascalartype: RAW .

    $default  reduce using rule 6 (rawascalartype)


State 43

   11 environmenttype: ENVIRONMENT .

    $default  reduce using rule 11 (environmenttype)


State 44

   12 expressiontype: EXPRESSION .

    $default  reduce using rule 12 (expressiontype)


State 45

   13 languagetype: LANGUAGE .

    $default  reduce using rule 13 (languagetype)


State 46

   14 symboltype: SYMBOL .

    $default  reduce using rule 14 (symboltype)


State 47

   15 externalptrtype: EXTERNALPOINTER .

    $default  reduce using rule 15 (externalptrtype)


State 48

   16 bytecodetype: BYTECODE .

    $default  reduce using rule 16 (bytecodetype)


State 49

   17 pairlisttype: PAIRLIST .

    $default  reduce using rule 17 (pairlisttype)


State 50

   18 s4type: S4 .

    $default  reduce using rule 18 (s4type)


State 51

   19 weakreftype: WEAKREF .

    $default  reduce using rule 19 (weakreftype)


State 52

   20 anytype: ANY .

    $default  reduce using rule 20 (anytype)


State 53

    8 scalartype: ascalartype .

    $default  reduce using rule 8 (scalartype)


State 54

    9 scalartype: rawascalartype .

    $default  reduce using rule 9 (scalartype)


State 55

   10 scalartype: nascalartype .

    $default  reduce using rule 10 (scalartype)


State 56

   22 vectortype: scalartype . "[" "]"
   59 nonuniontype: scalartype .

    "["  shift, and go to state 91

    $default  reduce using rule 59 (nonuniontype)


State 57

   60 nonuniontype: environmenttype .

    $default  reduce using rule 60 (nonuniontype)


State 58

   61 nonuniontype: expressiontype .

    $default  reduce using rule 61 (nonuniontype)


State 59

   62 nonuniontype: languagetype .

    $default  reduce using rule 62 (nonuniontype)


State 60

   63 nonuniontype: symboltype .

    $default  reduce using rule 63 (nonuniontype)


State 61

   64 nonuniontype: externalptrtype .

    $default  reduce using rule 64 (nonuniontype)


State 62

   65 nonuniontype: bytecodetype .

    $default  reduce using rule 65 (nonuniontype)


State 63

   66 nonuniontype: pairlisttype .

    $default  reduce using rule 66 (nonuniontype)


State 64

   67 nonuniontype: s4type .

    $default  reduce using rule 67 (nonuniontype)


State 65

   68 nonuniontype: weakreftype .

    $default  reduce using rule 68 (nonuniontype)


State 66

   82 type: unknowntype .

    $default  reduce using rule 82 (type)


State 67

   81 type: anytype .

    $default  reduce using rule 81 (type)


State 68

   69 nonuniontype: vectortype .

    $default  reduce using rule 69 (nonuniontype)


State 69

   70 nonuniontype: functiontype .

    $default  reduce using rule 70 (nonuniontype)


State 70

   74 nonuniontype: grouptype .

    $default  reduce using rule 74 (nonuniontype)


State 71

   75 innertype: nonuniontype .

    $default  reduce using rule 75 (innertype)


State 72

   72 nonuniontype: listtype .

    $default  reduce using rule 72 (nonuniontype)


State 73

   71 nonuniontype: structtype .

    $default  reduce using rule 71 (nonuniontype)


State 74

   73 nonuniontype: tupletype .

    $default  reduce using rule 73 (nonuniontype)


State 75

   76 innertype: innertype . "|" nonuniontype
   79 type: innertype .

    "|"  shift, and go to state 92

    $default  reduce using rule 79 (type)


State 76

   80 type: nulltype .

    $default  reduce using rule 80 (type)


State 77

   83 decltype: TYPEDECL identifier type . ";"

    ";"  shift, and go to state 93


State 78

    7 nascalartype: "^" ascalartype .

    $default  reduce using rule 7 (nascalartype)


State 79

   23 listtype: "((" typeseq . "))"
   26 typeseq: typeseq . "," type

    ","   shift, and go to state 94
    "))"  shift, and go to state 95


State 80

   25 typeseq: type .

    $default  reduce using rule 25 (typeseq)


State 81

   58 grouptype: "(" type . ")"

    ")"  shift, and go to state 96


State 82

   53 paramtype: "..." .

    $default  reduce using rule 53 (paramtype)


State 83

   55 paramtypeseq: paramtype .

    $default  reduce using rule 55 (paramtypeseq)


State 84

   56 paramtypeseq: paramtypeseq . "," paramtype
   57 functiontype: "<" paramtypeseq . ">" "=>" type

    ","  shift, and go to state 97
    ">"  shift, and go to state 98


State 85

   52 paramtype: type .

    $default  reduce using rule 52 (paramtype)


State 86

   26 typeseq: typeseq . "," type
   28 tupletype: "[[" typeseq . "]]"

    ","   shift, and go to state 94
    "]]"  shift, and go to state 99


State 87

   50 namedtypeseq: namedtype .

    $default  reduce using rule 50 (namedtypeseq)


State 88

   27 structtype: "{{" namedtypeseq . "}}"
   51 namedtypeseq: namedtypeseq . "," namedtype

    ","   shift, and go to state 100
    "}}"  shift, and go to state 101


State 89

   48 namedtype: identifier . ":" type

    ":"  shift, and go to state 102


State 90

   76 innertype: innertype . "|" nonuniontype
   78 nulltype: "?" innertype .

    "|"  shift, and go to state 92

    $default  reduce using rule 78 (nulltype)


State 91

   22 vectortype: scalartype "[" . "]"

    "]"  shift, and go to state 103


State 92

   76 innertype: innertype "|" . nonuniontype

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 104
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74


State 93

   83 decltype: TYPEDECL identifier type ";" .

    $default  reduce using rule 83 (decltype)


State 94

   26 typeseq: typeseq "," . type

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 105


State 95

   23 listtype: "((" typeseq "))" .

    $default  reduce using rule 23 (listtype)


State 96

   58 grouptype: "(" type ")" .

    $default  reduce using rule 58 (grouptype)


State 97

   56 paramtypeseq: paramtypeseq "," . paramtype

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "..."            shift, and go to state 82
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    paramtype        go to state 106
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 85


State 98

   57 functiontype: "<" paramtypeseq ">" . "=>" type

    "=>"  shift, and go to state 107


State 99

   28 tupletype: "[[" typeseq "]]" .

    $default  reduce using rule 28 (tupletype)


State 100

   51 namedtypeseq: namedtypeseq "," . namedtype

    "..."            shift, and go to state 6
    INTEGER          shift, and go to state 7
    DOUBLE           shift, and go to state 8
    COMPLEX          shift, and go to state 9
    CHARACTER        shift, and go to state 10
    LOGICAL          shift, and go to state 11
    RAW              shift, and go to state 12
    ENVIRONMENT      shift, and go to state 13
    EXPRESSION       shift, and go to state 14
    LANGUAGE         shift, and go to state 15
    SYMBOL           shift, and go to state 16
    EXTERNALPOINTER  shift, and go to state 17
    BYTECODE         shift, and go to state 18
    PAIRLIST         shift, and go to state 19
    S4               shift, and go to state 20
    WEAKREF          shift, and go to state 21
    ANY              shift, and go to state 22
    TYPEDECL         shift, and go to state 23
    IDENTIFIER       shift, and go to state 24

    namedtype   go to state 108
    identifier  go to state 89


State 101

   27 structtype: "{{" namedtypeseq "}}" .

    $default  reduce using rule 27 (structtype)


State 102

   48 namedtype: identifier ":" . type

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 109


State 103

   22 vectortype: scalartype "[" "]" .

    $default  reduce using rule 22 (vectortype)


State 104

   76 innertype: innertype "|" nonuniontype .

    $default  reduce using rule 76 (innertype)


State 105

   26 typeseq: typeseq "," type .

    $default  reduce using rule 26 (typeseq)


State 106

   56 paramtypeseq: paramtypeseq "," paramtype .

    $default  reduce using rule 56 (paramtypeseq)


State 107

   57 functiontype: "<" paramtypeseq ">" "=>" . type

    "^"              shift, and go to state 29
    "(("             shift, and go to state 30
    "("              shift, and go to state 31
    "<"              shift, and go to state 32
    "[["             shift, and go to state 33
    "{{"             shift, and go to state 34
    "???"            shift, and go to state 35
    "?"              shift, and go to state 36
    INTEGER          shift, and go to state 37
    DOUBLE           shift, and go to state 38
    COMPLEX          shift, and go to state 39
    CHARACTER        shift, and go to state 40
    LOGICAL          shift, and go to state 41
    RAW              shift, and go to state 42
    ENVIRONMENT      shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    LANGUAGE         shift, and go to state 45
    SYMBOL           shift, and go to state 46
    EXTERNALPOINTER  shift, and go to state 47
    BYTECODE         shift, and go to state 48
    PAIRLIST         shift, and go to state 49
    S4               shift, and go to state 50
    WEAKREF          shift, and go to state 51
    ANY              shift, and go to state 52

    ascalartype      go to state 53
    rawascalartype   go to state 54
    nascalartype     go to state 55
    scalartype       go to state 56
    environmenttype  go to state 57
    expressiontype   go to state 58
    languagetype     go to state 59
    symboltype       go to state 60
    externalptrtype  go to state 61
    bytecodetype     go to state 62
    pairlisttype     go to state 63
    s4type           go to state 64
    weakreftype      go to state 65
    unknowntype      go to state 66
    anytype          go to state 67
    vectortype       go to state 68
    functiontype     go to state 69
    grouptype        go to state 70
    nonuniontype     go to state 71
    listtype         go to state 72
    structtype       go to state 73
    tupletype        go to state 74
    innertype        go to state 75
    nulltype         go to state 76
    type             go to state 110


State 108

   51 namedtypeseq: namedtypeseq "," namedtype .

    $default  reduce using rule 51 (namedtypeseq)


State 109

   48 namedtype: identifier ":" type .

    $default  reduce using rule 48 (namedtype)


State 110

   57 functiontype: "<" paramtypeseq ">" "=>" type .

    $default  reduce using rule 57 (functiontype)
