Terminals unused in grammar

    "(("
    "))"
    "[["
    "]]"
    "{{"
    "}}"
    LBRACKET


Grammar

    0 $accept: start "end of file"

    1 ascalartype: INTEGER
    2            | DOUBLE
    3            | COMPLEX
    4            | CHARACTER
    5            | LOGICAL

    6 rawascalartype: RAW

    7 nascalartype: "^" ascalartype

    8 scalartype: ascalartype
    9           | rawascalartype
   10           | nascalartype

   11 environmenttype: ENVIRONMENT

   12 expressiontype: EXPRESSION

   13 languagetype: LANGUAGE

   14 symboltype: SYMBOL

   15 externalptrtype: EXTERNALPOINTER

   16 bytecodetype: BYTECODE

   17 pairlisttype: PAIRLIST

   18 s4type: S4

   19 weakreftype: WEAKREF

   20 anytype: ANY

   21 unknowntype: "???"

   22 vectortype: scalartype "[]"

   23 listtype: LIST "<" type ">"

   24 typeseq: type
   25        | typeseq "," type

   26 structelements: %empty
   27               | namedtypeseq

   28 structtype: STRUCT "<" structelements ">"

   29 tupleelements: %empty
   30              | typeseq

   31 tupletype: TUPLE "<" tupleelements ">"

   32 identifier: INTEGER
   33           | DOUBLE
   34           | COMPLEX
   35           | CHARACTER
   36           | LOGICAL
   37           | RAW
   38           | ENVIRONMENT
   39           | EXPRESSION
   40           | LANGUAGE
   41           | SYMBOL
   42           | EXTERNALPOINTER
   43           | BYTECODE
   44           | PAIRLIST
   45           | S4
   46           | WEAKREF
   47           | TUPLE
   48           | LIST
   49           | STRUCT
   50           | ANY
   51           | TYPEDECL
   52           | "..."
   53           | IDENTIFIER
   54           | QUOTED_IDENTIFIER

   55 namedtype: identifier ":" type
   56          | "^" ":" type

   57 namedtypeseq: namedtype
   58             | namedtypeseq "," namedtype

   59 paramtype: type
   60          | "..."

   61 paramtypeseq: paramtype
   62             | paramtypeseq "," paramtype

   63 params: "<" paramtypeseq ">"
   64       | "<" ">"
   65       | anytype

   66 functiontype: params "=>" type

   67 grouptype: "(" type ")"

   68 nonuniontype: scalartype
   69             | environmenttype
   70             | expressiontype
   71             | languagetype
   72             | symboltype
   73             | externalptrtype
   74             | bytecodetype
   75             | pairlisttype
   76             | s4type
   77             | weakreftype
   78             | vectortype
   79             | functiontype
   80             | structtype
   81             | listtype
   82             | tupletype
   83             | grouptype
   84             | unknowntype

   85 uniontype: nonuniontype
   86          | uniontype "|" nonuniontype

   87 nulltype: "null"
   88         | "?" uniontype

   89 type: uniontype
   90     | nulltype
   91     | anytype

   92 decltype: TYPEDECL identifier type ";"

   93 decllist: decltype
   94         | decllist decltype

   95 start: "end of file"
   96      | decllist "end of file"


Terminals, with rules where they appear

    "end of file" (0) 0 95 96
    error (256)
    "|" <std::string> (258) 86
    "^" <std::string> (259) 7 56
    "=>" <std::string> (260) 66
    "," <std::string> (261) 25 58 62
    "((" <std::string> (262)
    "(" <std::string> (263) 67
    "))" <std::string> (264)
    ")" <std::string> (265) 67
    "[]" <std::string> (266) 22
    "<" <std::string> (267) 23 28 31 63 64
    ">" <std::string> (268) 23 28 31 63 64
    "[[" <std::string> (269)
    "]]" <std::string> (270)
    "{{" <std::string> (271)
    "}}" <std::string> (272)
    ";" <std::string> (273) 92
    ":" <std::string> (274) 55 56
    "..." <std::string> (275) 52 60
    "???" <std::string> (276) 21
    "?" <std::string> (277) 88
    "null" <std::string> (278) 87
    INTEGER <std::string> (279) 1 32
    DOUBLE <std::string> (280) 2 33
    COMPLEX <std::string> (281) 3 34
    CHARACTER <std::string> (282) 4 35
    LOGICAL <std::string> (283) 5 36
    RAW <std::string> (284) 6 37
    ENVIRONMENT <std::string> (285) 11 38
    EXPRESSION <std::string> (286) 12 39
    LANGUAGE <std::string> (287) 13 40
    SYMBOL <std::string> (288) 14 41
    EXTERNALPOINTER <std::string> (289) 15 42
    BYTECODE <std::string> (290) 16 43
    PAIRLIST <std::string> (291) 17 44
    S4 <std::string> (292) 18 45
    WEAKREF <std::string> (293) 19 46
    TUPLE <std::string> (294) 31 47
    LIST <std::string> (295) 23 48
    STRUCT <std::string> (296) 28 49
    ANY <std::string> (297) 20 50
    TYPEDECL <std::string> (298) 51 92
    IDENTIFIER <std::string> (299) 53
    QUOTED_IDENTIFIER <std::string> (300) 54
    LBRACKET (301)
    LOWER_THAN_OR (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    ascalartype <AScalarTypeNodePtr> (49)
        on left: 1 2 3 4 5
        on right: 7 8
    rawascalartype <RawAScalarTypeNodePtr> (50)
        on left: 6
        on right: 9
    nascalartype <NAScalarTypeNodePtr> (51)
        on left: 7
        on right: 10
    scalartype <ScalarTypeNodePtr> (52)
        on left: 8 9 10
        on right: 22 68
    environmenttype <EnvironmentTypeNodePtr> (53)
        on left: 11
        on right: 69
    expressiontype <ExpressionTypeNodePtr> (54)
        on left: 12
        on right: 70
    languagetype <LanguageTypeNodePtr> (55)
        on left: 13
        on right: 71
    symboltype <SymbolTypeNodePtr> (56)
        on left: 14
        on right: 72
    externalptrtype <ExternalPointerTypeNodePtr> (57)
        on left: 15
        on right: 73
    bytecodetype <BytecodeTypeNodePtr> (58)
        on left: 16
        on right: 74
    pairlisttype <PairlistTypeNodePtr> (59)
        on left: 17
        on right: 75
    s4type <S4TypeNodePtr> (60)
        on left: 18
        on right: 76
    weakreftype <WeakReferenceTypeNodePtr> (61)
        on left: 19
        on right: 77
    unknowntype <UnknownTypeNodePtr> (62)
        on left: 21
        on right: 84
    anytype <AnyTypeNodePtr> (63)
        on left: 20
        on right: 65 91
    vectortype <VectorTypeNodePtr> (64)
        on left: 22
        on right: 78
    typeseq <NodePtr> (65)
        on left: 24 25
        on right: 25 30
    namedtype <TagTypePairNodePtr> (66)
        on left: 55 56
        on right: 57 58
    namedtypeseq <NodePtr> (67)
        on left: 57 58
        on right: 27 58
    paramtype <TypeNodePtr> (68)
        on left: 59 60
        on right: 61 62
    paramtypeseq <NodePtr> (69)
        on left: 61 62
        on right: 62 63
    params <NodePtr> (70)
        on left: 63 64 65
        on right: 66
    functiontype <FunctionTypeNodePtr> (71)
        on left: 66
        on right: 79
    grouptype <GroupTypeNodePtr> (72)
        on left: 67
        on right: 83
    nonuniontype <TypeNodePtr> (73)
        on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 85 86
    listtype <ListTypeNodePtr> (74)
        on left: 23
        on right: 81
    structelements <NodePtr> (75)
        on left: 26 27
        on right: 28
    structtype <StructTypeNodePtr> (76)
        on left: 28
        on right: 80
    tupleelements <NodePtr> (77)
        on left: 29 30
        on right: 31
    tupletype <TupleTypeNodePtr> (78)
        on left: 31
        on right: 82
    identifier <IdentifierNodePtr> (79)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 55 92
    uniontype <TypeNodePtr> (80)
        on left: 85 86
        on right: 86 88 89
    nulltype <TypeNodePtr> (81)
        on left: 87 88
        on right: 90
    type <TypeNodePtr> (82)
        on left: 89 90 91
        on right: 23 24 25 55 56 59 66 67 92
    decltype <TypeDeclarationNodePtr> (83)
        on left: 92
        on right: 93 94
    decllist (84)
        on left: 93 94
        on right: 94 96
    start (85)
        on left: 95 96
        on right: 0


State 0

    0 $accept: . start "end of file"

    "end of file"  shift, and go to state 1
    TYPEDECL       shift, and go to state 2

    decltype  go to state 3
    decllist  go to state 4
    start     go to state 5


State 1

   95 start: "end of file" .

    $default  reduce using rule 95 (start)


State 2

   92 decltype: TYPEDECL . identifier type ";"

    "..."              shift, and go to state 6
    INTEGER            shift, and go to state 7
    DOUBLE             shift, and go to state 8
    COMPLEX            shift, and go to state 9
    CHARACTER          shift, and go to state 10
    LOGICAL            shift, and go to state 11
    RAW                shift, and go to state 12
    ENVIRONMENT        shift, and go to state 13
    EXPRESSION         shift, and go to state 14
    LANGUAGE           shift, and go to state 15
    SYMBOL             shift, and go to state 16
    EXTERNALPOINTER    shift, and go to state 17
    BYTECODE           shift, and go to state 18
    PAIRLIST           shift, and go to state 19
    S4                 shift, and go to state 20
    WEAKREF            shift, and go to state 21
    TUPLE              shift, and go to state 22
    LIST               shift, and go to state 23
    STRUCT             shift, and go to state 24
    ANY                shift, and go to state 25
    TYPEDECL           shift, and go to state 26
    IDENTIFIER         shift, and go to state 27
    QUOTED_IDENTIFIER  shift, and go to state 28

    identifier  go to state 29


State 3

   93 decllist: decltype .

    $default  reduce using rule 93 (decllist)


State 4

   94 decllist: decllist . decltype
   96 start: decllist . "end of file"

    "end of file"  shift, and go to state 30
    TYPEDECL       shift, and go to state 2

    decltype  go to state 31


State 5

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 32


State 6

   52 identifier: "..." .

    $default  reduce using rule 52 (identifier)


State 7

   32 identifier: INTEGER .

    $default  reduce using rule 32 (identifier)


State 8

   33 identifier: DOUBLE .

    $default  reduce using rule 33 (identifier)


State 9

   34 identifier: COMPLEX .

    $default  reduce using rule 34 (identifier)


State 10

   35 identifier: CHARACTER .

    $default  reduce using rule 35 (identifier)


State 11

   36 identifier: LOGICAL .

    $default  reduce using rule 36 (identifier)


State 12

   37 identifier: RAW .

    $default  reduce using rule 37 (identifier)


State 13

   38 identifier: ENVIRONMENT .

    $default  reduce using rule 38 (identifier)


State 14

   39 identifier: EXPRESSION .

    $default  reduce using rule 39 (identifier)


State 15

   40 identifier: LANGUAGE .

    $default  reduce using rule 40 (identifier)


State 16

   41 identifier: SYMBOL .

    $default  reduce using rule 41 (identifier)


State 17

   42 identifier: EXTERNALPOINTER .

    $default  reduce using rule 42 (identifier)


State 18

   43 identifier: BYTECODE .

    $default  reduce using rule 43 (identifier)


State 19

   44 identifier: PAIRLIST .

    $default  reduce using rule 44 (identifier)


State 20

   45 identifier: S4 .

    $default  reduce using rule 45 (identifier)


State 21

   46 identifier: WEAKREF .

    $default  reduce using rule 46 (identifier)


State 22

   47 identifier: TUPLE .

    $default  reduce using rule 47 (identifier)


State 23

   48 identifier: LIST .

    $default  reduce using rule 48 (identifier)


State 24

   49 identifier: STRUCT .

    $default  reduce using rule 49 (identifier)


State 25

   50 identifier: ANY .

    $default  reduce using rule 50 (identifier)


State 26

   51 identifier: TYPEDECL .

    $default  reduce using rule 51 (identifier)


State 27

   53 identifier: IDENTIFIER .

    $default  reduce using rule 53 (identifier)


State 28

   54 identifier: QUOTED_IDENTIFIER .

    $default  reduce using rule 54 (identifier)


State 29

   92 decltype: TYPEDECL identifier . type ";"

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 83


State 30

   96 start: decllist "end of file" .

    $default  reduce using rule 96 (start)


State 31

   94 decllist: decllist decltype .

    $default  reduce using rule 94 (decllist)


State 32

    0 $accept: start "end of file" .

    $default  accept


State 33

    7 nascalartype: "^" . ascalartype

    INTEGER    shift, and go to state 39
    DOUBLE     shift, and go to state 40
    COMPLEX    shift, and go to state 41
    CHARACTER  shift, and go to state 42
    LOGICAL    shift, and go to state 43

    ascalartype  go to state 84


State 34

   67 grouptype: "(" . type ")"

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 85


State 35

   63 params: "<" . paramtypeseq ">"
   64       | "<" . ">"

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    ">"              shift, and go to state 86
    "..."            shift, and go to state 87
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    paramtype        go to state 88
    paramtypeseq     go to state 89
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 90


State 36

   21 unknowntype: "???" .

    $default  reduce using rule 21 (unknowntype)


State 37

   88 nulltype: "?" . uniontype

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 91
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 92


State 38

   87 nulltype: "null" .

    $default  reduce using rule 87 (nulltype)


State 39

    1 ascalartype: INTEGER .

    $default  reduce using rule 1 (ascalartype)


State 40

    2 ascalartype: DOUBLE .

    $default  reduce using rule 2 (ascalartype)


State 41

    3 ascalartype: COMPLEX .

    $default  reduce using rule 3 (ascalartype)


State 42

    4 ascalartype: CHARACTER .

    $default  reduce using rule 4 (ascalartype)


State 43

    5 ascalartype: LOGICAL .

    $default  reduce using rule 5 (ascalartype)


State 44

    6 rawascalartype: RAW .

    $default  reduce using rule 6 (rawascalartype)


State 45

   11 environmenttype: ENVIRONMENT .

    $default  reduce using rule 11 (environmenttype)


State 46

   12 expressiontype: EXPRESSION .

    $default  reduce using rule 12 (expressiontype)


State 47

   13 languagetype: LANGUAGE .

    $default  reduce using rule 13 (languagetype)


State 48

   14 symboltype: SYMBOL .

    $default  reduce using rule 14 (symboltype)


State 49

   15 externalptrtype: EXTERNALPOINTER .

    $default  reduce using rule 15 (externalptrtype)


State 50

   16 bytecodetype: BYTECODE .

    $default  reduce using rule 16 (bytecodetype)


State 51

   17 pairlisttype: PAIRLIST .

    $default  reduce using rule 17 (pairlisttype)


State 52

   18 s4type: S4 .

    $default  reduce using rule 18 (s4type)


State 53

   19 weakreftype: WEAKREF .

    $default  reduce using rule 19 (weakreftype)


State 54

   31 tupletype: TUPLE . "<" tupleelements ">"

    "<"  shift, and go to state 93


State 55

   23 listtype: LIST . "<" type ">"

    "<"  shift, and go to state 94


State 56

   28 structtype: STRUCT . "<" structelements ">"

    "<"  shift, and go to state 95


State 57

   20 anytype: ANY .

    $default  reduce using rule 20 (anytype)


State 58

    8 scalartype: ascalartype .

    $default  reduce using rule 8 (scalartype)


State 59

    9 scalartype: rawascalartype .

    $default  reduce using rule 9 (scalartype)


State 60

   10 scalartype: nascalartype .

    $default  reduce using rule 10 (scalartype)


State 61

   22 vectortype: scalartype . "[]"
   68 nonuniontype: scalartype .

    "[]"  shift, and go to state 96

    $default  reduce using rule 68 (nonuniontype)


State 62

   69 nonuniontype: environmenttype .

    $default  reduce using rule 69 (nonuniontype)


State 63

   70 nonuniontype: expressiontype .

    $default  reduce using rule 70 (nonuniontype)


State 64

   71 nonuniontype: languagetype .

    $default  reduce using rule 71 (nonuniontype)


State 65

   72 nonuniontype: symboltype .

    $default  reduce using rule 72 (nonuniontype)


State 66

   73 nonuniontype: externalptrtype .

    $default  reduce using rule 73 (nonuniontype)


State 67

   74 nonuniontype: bytecodetype .

    $default  reduce using rule 74 (nonuniontype)


State 68

   75 nonuniontype: pairlisttype .

    $default  reduce using rule 75 (nonuniontype)


State 69

   76 nonuniontype: s4type .

    $default  reduce using rule 76 (nonuniontype)


State 70

   77 nonuniontype: weakreftype .

    $default  reduce using rule 77 (nonuniontype)


State 71

   84 nonuniontype: unknowntype .

    $default  reduce using rule 84 (nonuniontype)


State 72

   65 params: anytype .
   91 type: anytype .

    "=>"      reduce using rule 65 (params)
    $default  reduce using rule 91 (type)


State 73

   78 nonuniontype: vectortype .

    $default  reduce using rule 78 (nonuniontype)


State 74

   66 functiontype: params . "=>" type

    "=>"  shift, and go to state 97


State 75

   79 nonuniontype: functiontype .

    $default  reduce using rule 79 (nonuniontype)


State 76

   83 nonuniontype: grouptype .

    $default  reduce using rule 83 (nonuniontype)


State 77

   85 uniontype: nonuniontype .

    $default  reduce using rule 85 (uniontype)


State 78

   81 nonuniontype: listtype .

    $default  reduce using rule 81 (nonuniontype)


State 79

   80 nonuniontype: structtype .

    $default  reduce using rule 80 (nonuniontype)


State 80

   82 nonuniontype: tupletype .

    $default  reduce using rule 82 (nonuniontype)


State 81

   86 uniontype: uniontype . "|" nonuniontype
   89 type: uniontype .

    "|"  shift, and go to state 98

    $default  reduce using rule 89 (type)


State 82

   90 type: nulltype .

    $default  reduce using rule 90 (type)


State 83

   92 decltype: TYPEDECL identifier type . ";"

    ";"  shift, and go to state 99


State 84

    7 nascalartype: "^" ascalartype .

    $default  reduce using rule 7 (nascalartype)


State 85

   67 grouptype: "(" type . ")"

    ")"  shift, and go to state 100


State 86

   64 params: "<" ">" .

    $default  reduce using rule 64 (params)


State 87

   60 paramtype: "..." .

    $default  reduce using rule 60 (paramtype)


State 88

   61 paramtypeseq: paramtype .

    $default  reduce using rule 61 (paramtypeseq)


State 89

   62 paramtypeseq: paramtypeseq . "," paramtype
   63 params: "<" paramtypeseq . ">"

    ","  shift, and go to state 101
    ">"  shift, and go to state 102


State 90

   59 paramtype: type .

    $default  reduce using rule 59 (paramtype)


State 91

   65 params: anytype .

    $default  reduce using rule 65 (params)


State 92

   86 uniontype: uniontype . "|" nonuniontype
   88 nulltype: "?" uniontype .

    "|"  shift, and go to state 98

    $default  reduce using rule 88 (nulltype)


State 93

   31 tupletype: TUPLE "<" . tupleelements ">"

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    $default  reduce using rule 29 (tupleelements)

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    typeseq          go to state 103
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupleelements    go to state 104
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 105


State 94

   23 listtype: LIST "<" . type ">"

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 106


State 95

   28 structtype: STRUCT "<" . structelements ">"

    "^"                shift, and go to state 107
    "..."              shift, and go to state 6
    INTEGER            shift, and go to state 7
    DOUBLE             shift, and go to state 8
    COMPLEX            shift, and go to state 9
    CHARACTER          shift, and go to state 10
    LOGICAL            shift, and go to state 11
    RAW                shift, and go to state 12
    ENVIRONMENT        shift, and go to state 13
    EXPRESSION         shift, and go to state 14
    LANGUAGE           shift, and go to state 15
    SYMBOL             shift, and go to state 16
    EXTERNALPOINTER    shift, and go to state 17
    BYTECODE           shift, and go to state 18
    PAIRLIST           shift, and go to state 19
    S4                 shift, and go to state 20
    WEAKREF            shift, and go to state 21
    TUPLE              shift, and go to state 22
    LIST               shift, and go to state 23
    STRUCT             shift, and go to state 24
    ANY                shift, and go to state 25
    TYPEDECL           shift, and go to state 26
    IDENTIFIER         shift, and go to state 27
    QUOTED_IDENTIFIER  shift, and go to state 28

    $default  reduce using rule 26 (structelements)

    namedtype       go to state 108
    namedtypeseq    go to state 109
    structelements  go to state 110
    identifier      go to state 111


State 96

   22 vectortype: scalartype "[]" .

    $default  reduce using rule 22 (vectortype)


State 97

   66 functiontype: params "=>" . type

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 112


State 98

   86 uniontype: uniontype "|" . nonuniontype

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 91
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 113
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80


State 99

   92 decltype: TYPEDECL identifier type ";" .

    $default  reduce using rule 92 (decltype)


State 100

   67 grouptype: "(" type ")" .

    $default  reduce using rule 67 (grouptype)


State 101

   62 paramtypeseq: paramtypeseq "," . paramtype

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "..."            shift, and go to state 87
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    paramtype        go to state 114
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 90


State 102

   63 params: "<" paramtypeseq ">" .

    $default  reduce using rule 63 (params)


State 103

   25 typeseq: typeseq . "," type
   30 tupleelements: typeseq .

    ","  shift, and go to state 115

    $default  reduce using rule 30 (tupleelements)


State 104

   31 tupletype: TUPLE "<" tupleelements . ">"

    ">"  shift, and go to state 116


State 105

   24 typeseq: type .

    $default  reduce using rule 24 (typeseq)


State 106

   23 listtype: LIST "<" type . ">"

    ">"  shift, and go to state 117


State 107

   56 namedtype: "^" . ":" type

    ":"  shift, and go to state 118


State 108

   57 namedtypeseq: namedtype .

    $default  reduce using rule 57 (namedtypeseq)


State 109

   27 structelements: namedtypeseq .
   58 namedtypeseq: namedtypeseq . "," namedtype

    ","  shift, and go to state 119

    $default  reduce using rule 27 (structelements)


State 110

   28 structtype: STRUCT "<" structelements . ">"

    ">"  shift, and go to state 120


State 111

   55 namedtype: identifier . ":" type

    ":"  shift, and go to state 121


State 112

   66 functiontype: params "=>" type .

    $default  reduce using rule 66 (functiontype)


State 113

   86 uniontype: uniontype "|" nonuniontype .

    $default  reduce using rule 86 (uniontype)


State 114

   62 paramtypeseq: paramtypeseq "," paramtype .

    $default  reduce using rule 62 (paramtypeseq)


State 115

   25 typeseq: typeseq "," . type

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 122


State 116

   31 tupletype: TUPLE "<" tupleelements ">" .

    $default  reduce using rule 31 (tupletype)


State 117

   23 listtype: LIST "<" type ">" .

    $default  reduce using rule 23 (listtype)


State 118

   56 namedtype: "^" ":" . type

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 123


State 119

   58 namedtypeseq: namedtypeseq "," . namedtype

    "^"                shift, and go to state 107
    "..."              shift, and go to state 6
    INTEGER            shift, and go to state 7
    DOUBLE             shift, and go to state 8
    COMPLEX            shift, and go to state 9
    CHARACTER          shift, and go to state 10
    LOGICAL            shift, and go to state 11
    RAW                shift, and go to state 12
    ENVIRONMENT        shift, and go to state 13
    EXPRESSION         shift, and go to state 14
    LANGUAGE           shift, and go to state 15
    SYMBOL             shift, and go to state 16
    EXTERNALPOINTER    shift, and go to state 17
    BYTECODE           shift, and go to state 18
    PAIRLIST           shift, and go to state 19
    S4                 shift, and go to state 20
    WEAKREF            shift, and go to state 21
    TUPLE              shift, and go to state 22
    LIST               shift, and go to state 23
    STRUCT             shift, and go to state 24
    ANY                shift, and go to state 25
    TYPEDECL           shift, and go to state 26
    IDENTIFIER         shift, and go to state 27
    QUOTED_IDENTIFIER  shift, and go to state 28

    namedtype   go to state 124
    identifier  go to state 111


State 120

   28 structtype: STRUCT "<" structelements ">" .

    $default  reduce using rule 28 (structtype)


State 121

   55 namedtype: identifier ":" . type

    "^"              shift, and go to state 33
    "("              shift, and go to state 34
    "<"              shift, and go to state 35
    "???"            shift, and go to state 36
    "?"              shift, and go to state 37
    "null"           shift, and go to state 38
    INTEGER          shift, and go to state 39
    DOUBLE           shift, and go to state 40
    COMPLEX          shift, and go to state 41
    CHARACTER        shift, and go to state 42
    LOGICAL          shift, and go to state 43
    RAW              shift, and go to state 44
    ENVIRONMENT      shift, and go to state 45
    EXPRESSION       shift, and go to state 46
    LANGUAGE         shift, and go to state 47
    SYMBOL           shift, and go to state 48
    EXTERNALPOINTER  shift, and go to state 49
    BYTECODE         shift, and go to state 50
    PAIRLIST         shift, and go to state 51
    S4               shift, and go to state 52
    WEAKREF          shift, and go to state 53
    TUPLE            shift, and go to state 54
    LIST             shift, and go to state 55
    STRUCT           shift, and go to state 56
    ANY              shift, and go to state 57

    ascalartype      go to state 58
    rawascalartype   go to state 59
    nascalartype     go to state 60
    scalartype       go to state 61
    environmenttype  go to state 62
    expressiontype   go to state 63
    languagetype     go to state 64
    symboltype       go to state 65
    externalptrtype  go to state 66
    bytecodetype     go to state 67
    pairlisttype     go to state 68
    s4type           go to state 69
    weakreftype      go to state 70
    unknowntype      go to state 71
    anytype          go to state 72
    vectortype       go to state 73
    params           go to state 74
    functiontype     go to state 75
    grouptype        go to state 76
    nonuniontype     go to state 77
    listtype         go to state 78
    structtype       go to state 79
    tupletype        go to state 80
    uniontype        go to state 81
    nulltype         go to state 82
    type             go to state 125


State 122

   25 typeseq: typeseq "," type .

    $default  reduce using rule 25 (typeseq)


State 123

   56 namedtype: "^" ":" type .

    $default  reduce using rule 56 (namedtype)


State 124

   58 namedtypeseq: namedtypeseq "," namedtype .

    $default  reduce using rule 58 (namedtypeseq)


State 125

   55 namedtype: identifier ":" type .

    $default  reduce using rule 55 (namedtype)
